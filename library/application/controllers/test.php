<?php
/*
 * The MIT License
 *
 * Copyright 2018 giuliobosco.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

require_once "controller.php";
require_once "application/model/user.php";
require_once "application/services/UserService.php";
require_once 'application/model/book.php';
require_once 'application/services/BookService.php';

/**
 * @author giuliobosco
 * @version 1.0.1 (2019-04-17 - 2019-04-17)
 */
class test extends Controller {

	public function __construct(array $parameters) {
		parent::__construct($parameters);
	}

	public function index(): void {
		parent::index(); // TODO: Change the autogenerated stub
	}

	public function UserService():void {
		$service = new UserService();

		$service->loadFile();
		var_dump($service->get());

		var_dump($service->get("admin"));
		$user = new user("normal2", "Library", "Normal2", "12345", "Viao adjfaosdj", "2001/01/01", "Normal");
		$service->add($user);
		$service->writeFile();
		$service->loadFile();
		var_dump($service->get());
		$service->remove($user);
		$service->writeFile();
		$service->loadFile();
		var_dump($service->get());
	}

	public function BookService():void {
		$service = new BookService();

		$service->loadFile();
		var_dump($service->get());

		var_dump($service->get("10"));

		$book = new book("20", "Libro 2", "Autore", "2019", "1");
		$service->add($book);
		$service->writeFile();
		$service->loadFile();
		var_dump($service->get());

		$service->remove($book);
		$service->writeFile();
		$service->loadFile();
		var_dump($service->get());
	}

}